1、我想查看某个镜像的从容器角度能够观察到的所有文件，即容器运行镜像时，容器中的文件结构
       docker run --name export-test busybox echo Export Hello   -- 能导出容器，不能导出镜像，所有先有镜像创建容器，而后将容器导出为压缩文件
       docker export export-test.tar export-test
       docker rm export-test     -- 清理容器
       
2、从容器制作新镜像       
        docker run -it --name image-dev ubuntu  /bin/bash  --创建Ubuntu容器
        apt-get update --更新Ubuntu软件源
        apt-get -y install git --安装git
        exit  --退出Ubuntu容器
        docker diff image-dev --查看容器中文件系统的改动
        docker commit -a "mm@126.com" -m "add git" image-dev ubuntu-git  --提交修改，将容器提交为一个镜像，将容器中的改动写入镜像。Docker In Action书中，这样子提交默认的入口点不是Git，但是我是
 基于docker的20.10.8版本，该版本中，这样子提交，安装的git默认就是入口点，这样间接说了docker的更新，更考虑用户的体验，不同版本的docker，细节可能会有变化。
        -- 如果入口点不是Git，说明你启动原始容器时附带的命令也被提交到了新镜像了（就是第一步中的/bin/bash），那你需要重新设置入口点：docker run --name cmd-git --entrypoint git ubuntu-git;
docker commit -m "set entrypoint" -a "mm@126.com" cmd-git ubuntu-git  ;   docker rm -vf cmd-git;
        docker rm -vf image-dev  --清理容器
        docker images --查看镜像列表

3、使用docker commit可以提交文件系统快照，所有的环境变量，工作目录，开放端口的集合，所有的卷定义，容器入口点，命令和参数
        docker run --name env-busybox -e ENV_PATH=mengmiao -e ENV_TEST=mm busybox
        docker commit env-busybox env-busybox
        docker images
        docker inspect env-busybox   --在Config中可以看到提交的环境变量
        
        docker run --name entry-busybox --entrypoint "/bin/sh" busybox
        docker commit entry-busybox entry-busybox
        docker inspect entry-busybox  --Entrypoint被设置为/bin/sh
        
4、将应用所在的容器暴露于网络中

5、暴露应用容器的端口
       docker run -d --name redisServer --expose 6379 -P redis  --将容器端口6379暴露，随机绑定主机端口
       docker port redisServer   --查看容器和主机的端口映射情况，可以使用主机端口访问容器的端口

       docker run -d --name redisServer1 -p 8989:6379 redis  --将容器端口6379暴露，绑定主机固定端口
       docker port redisServer
       
       docker run -d  -p 6379 -p 5000 -p 9999 --name redisServer2  redis  --将容器的6379/5000/9999端口全部暴露，随机绑定到主机端口
       docker port redisServer2
       
       docker run -d -P --name redisServer3 redis  --将容器镜像声明暴露的端口暴露，随机绑定到主机端口。譬如Redis的Dockerfile暴露6379端口，此命令将容器的6379随机绑定到主机的端口
       docker port redisServer3 
       
6、一个容器中的应用使用另一个容器中的应用
